;; n=8 ( ((3 1) (7 2) (...) ...) ...)
;; 座標(row col)のリストの並びにする
(map print (queens 8))
(define (queens board-size)
  (define (queen-cols k)
    (if (= k 0)
        (list empty-board)
        (filter
         (lambda (positions) (safe? k positions))
         (flatmap
          (lambda (rest-of-queens)
            (map (lambda (new-row)
                   (adjoin-position new-row k rest-of-queens))
                 (enumerate-interval 1 board-size)))
          (queen-cols (- k 1))))))
  (queen-cols board-size))
(define empty-board (list ()))
(define (adjoin-position row col pos)
  (if (null? (car pos))
      (list (list row col))
      (append pos (list (list row col)))))
(define (safe? k pos)
  (if (= k 1)
      #t
      (let ((keyrow (car (list-ref pos (- k 1)))))
	(cond ((= (car (car pos)) keyrow) #f)
	      ((= (+ (car (car pos)) (- k 1)) keyrow) #f)
	      ((= (- (car (car pos)) (- k 1)) keyrow) #f)
	      (else (safe? (- k 1) (cdr pos)))))))

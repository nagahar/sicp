(define v (make-segment (make-point 1 1) (make-point 1 7)))
(define h (make-segment (make-point 1 1) (make-point 5 1)))
(define rect1 (make-rectangle v h))
(define rect2 (make-rectangle (make-point 1 1) (make-point 5 7)))
(perimeter rect2)
(area rect2)

(define (perimeter rect)
  (* 2 (+ (vert-length rect) (horz-length rect))))
(define (area rect)
  (* (vert-length rect) (horz-length rect)))

(define (make-rectangle p q)
  (cons p q))
(define (vert-length rect)
  (length (make-segment (car rect) (make-point (x-point (car rect)) (y-point (cdr rect))))))
(define (horz-length rect)
  (length (make-segment (car rect) (make-point (x-point (cdr rect)) (y-point (car rect))))))

(define (make-rectangle vert horz)
  (cons vert horz))
(define (vert-length rect)
  (length (car rect)))
(define (horz-length rect)
  (length (cdr rect)))
(define (length seg)
  (sqrt (+ (square
	     (- (x-point (start-segment seg)) (x-point (end-segment seg))))
	    (square
	     (- (y-point (start-segment seg)) (y-point (end-segment seg)))))))

(define (make-segment p q)
  (cons p q))
(define (start-segment seg)
  (car seg))
(define (end-segment seg)
  (cdr seg))
(define (make-point x y)
  (cons x y))
(define (x-point p)
  (car p))
(define (y-point p)
  (cdr p))
(define (midpoint-segment seg)
  (make-point (average (x-point (start-segment seg)) (x-point (end-segment seg)))
	      (average (y-point (start-segment seg)) (y-point (end-segment seg)))))
(define (average x y)
  (/ (+ x y) 2))
(define (square x)
  (* x x))
(define (print-point p)
  (newline)
  (display "(")
  (display (x-point p))
  (display ",")
  (display (y-point p))
  (display ")"))

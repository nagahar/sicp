(define x (list (list 1 2) (list 3 4)))
(define (fringe ls)
  (cond ((null? ls) ())
	((not (pair? ls)) (cons ls ()))
	(else (append (fringe (car ls)) (fringe (cdr ls))))))
(fringe (list 1 2 3 4))
(fringe x)
(fringe (list x x))
(cons 2 (cons 1 (list 2 3)))
(cons (list 1 2) (list 3 4))
(append (cons 4 ()) ())
(define (sum term a next b)
  (define (iter a result)
    (if (> a b)
        result
        (iter (next a) (+ (term a) result))))
  (iter a 0))
(define (integral f a b dx)
  (define (add-dx x) (+ x dx))
  (* (sum f (+ a (/ dx 2.0)) add-dx b)
     dx))
(define (simpson f a b n)
  (define h (/ (- b a) n))
  (define (y k) (f (+ a (* k h))))
  (define (simpson-term x)
    (+ (y (- (* 2 x) 2))
       (* 4 (y (- (* 2 x) 1)))
       (y (* 2 x))))
  (define (next i) (+ i 1))
  (/ (* h (sum simpson-term 1 next (/ n 2))) 3))

(define (cube x)
  (* x x x))
(define x 10)

(parallel-execute (lambda () (set! x (* x x)))
				  (lambda () (set! x (* x x x))))

;; xの可能性
;; 100: P1の計算->P2の計算->P2のセット->P1のセット
;; 1000: P1の計算->P2の計算->P1のセット->P2のセット
;; 1000000: P1の計算->P1のセット->P2の計算->P2のセット(P2の計算->P2のセット->P1の計算->P1のセット)
;; 10000: P1の1つ目のx取得 -> P2の計算・セット -> P1の2つ目のx取得・計算->P1のセット
;; 100000: P2の1つ目のx取得 -> P1の計算・セット -> P2の2つ目、3つ目のx取得・計算->P2のセット
;; 10000: P2の1つ目、2つ目のx取得 -> P1の計算・セット -> P2の3つ目のx取得・計算->P2のセット

(define x 10)

(define s (make-serializer))

(parallel-execute (s (lambda () (set! x (* x x))))
				  (s (lambda () (set! x (* x x x)))))

;; xの可能性
;; 1000000: P1の計算->P1のセット->P2の計算->P2のセット(P2の計算->P2のセット->P1の計算->P1のセット)

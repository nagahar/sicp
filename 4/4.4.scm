(load "../metacircular.scm")
(define (and? exp) (tagged-list? exp 'and))
(define (and-clauses exp) (cdr exp))
(define (eval-and exp env)
  (cond ((null? exp) #t)
	((eval (first-exp exp) env) (eval-and (rest-exps exp) env))
	(else #f)))
(define (or? exp) (tagged-list? exp 'or))
(define (or-clauses exp) (cdr exp))
(define (eval-or exp env)
  (cond ((null? exp) #f)
	((eval (first-exp exp) env) #t)
	(else (eval-or (rest-exps exp) env))))
(define (eval exp env)
  (cond ((self-evaluating? exp) exp)
	((variable? exp) (lookup-variable-value exp env))
	((quoted? exp) (text-of-quotation exp))
	((assignment? exp) (eval-assignment exp env))
	((definition? exp) (eval-definition exp env))
	((if? exp) (eval-if exp env))
	((lambda? exp)
	 (make-procedure (lambda-parameters exp)
					 (lambda-body exp)
					 env))
	((begin? exp)
	 (eval-sequence (begin-actions exp) env))
	((cond? exp) (eval (cond->if exp) env))
	((and? exp) (eval-and (and-clauses exp) env))
	((or? exp) (eval-or (or-clauses exp) env))
	((application? exp)
	 (apply (eval (operator exp) env)
			(list-of-values (operands exp) env)))
	(else
	  (error "Unknown expression type -- EVAL" exp))))

